name: Inventory CI (one repo / service tag)

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version (e.g., 1.0.0)"
        required: true

permissions:
  contents: read

jobs:
  build-and-push-inventory:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - uses: gradle/actions/setup-gradle@v4

      - run: chmod +x ./gradlew

      # (옵션) CI 전용 설정파일 주입이 필요하면 주석 해제
      # - name: Create application-ci.yml
      #   run: |
      #     mkdir -p src/main/resources
      #     echo "${{ secrets.APP_CI_YML }}" > src/main/resources/application-ci.yml

      - name: Normalize Dockerfile (strip BOM, CRLF→LF)
        run: |
          sed -i '1s/^\xEF\xBB\xBF//' Dockerfile || true
          if command -v dos2unix >/dev/null 2>&1; then
            dos2unix Dockerfile
          else
            perl -pi -e 's/\r\n/\n/g' Dockerfile
          fi

      - name: Build inventory jar
        run: ./gradlew clean test bootJar -Dspring.profiles.active=ci

      # ▶ 버전 태그 분기: 수동 실행이면 입력 버전, 그 외엔 SHA 사용
      - name: Set image tags
        id: vars
        run: |
          SHA=${GITHUB_SHA::7}
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VER="${{ github.event.inputs.release_version }}"
            echo "TAG_VERSION=inventory-${VER}" >> $GITHUB_OUTPUT
          else
            echo "TAG_VERSION=inventory-${SHA}" >> $GITHUB_OUTPUT
          fi
          echo "IMAGE=hysungzzang/sampoom" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # buildx가 튀는 경우가 있어 안정 옵션 적용
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          driver-opts: |
            network=host

      - name: Build & Push (inventory)
        uses: docker/build-push-action@v6
        env:
          BUILDKIT_PROGRESS: plain
        with:
          context: .
          file: ./Dockerfile
          push: true
          no-cache: true
          provenance: false
          tags: |
            ${{ steps.vars.outputs.IMAGE }}:${{ steps.vars.outputs.TAG_VERSION }}
